#!/bin/bash

# Go through each subcatchment, calculate rain and pet, and store for later use
subcatch_totno='26'
echo 'total number of subcatchments being analysed is ' $subcatch_totno

subcatch_no='1'
echo 'initialised subcatchment number is set to' $subcatch_no

# Input raster map containing all (sub)catchments for study. 
topmod_allcatch='tweed_ihu_50m' # aligns better
echo 'raster map containing all catchments is' $topmod_allcatch

# Input raster map (sub)catchments.  Each (sub)catchment has a separate number
topmod_subcatch='tweed_subcatchments'
echo 'raster map of subcatchment used is' $topmod_subcatch


# Preparation; Clean up old MASK and maps
# Remove MASK if present
r.mask -r

# Start and end dates. t.rast.algebra needs literal quotes for dates.
start_date="2010-01-01"
end_date="2017-12-31"
start_date_trast=\"$start_date\"
end_date_trast=\"$end_date\"

d.mon sel=wx0
d.rast $topmod_subcatch

d.mon sel=wx1

while [ $subcatch_no -le $subcatch_totno ]
do
echo "**********************************************************************"
echo $subcatch_no

# Set region to cover all study catchments
g.region -a rast=$topmod_allcatch res=50


# Set MASK to correct subcatchment
r.mapcalc expression="topmod_onecatch=if($topmod_subcatch==$subcatch_no,1,null())" --overwrite
g.region -a zoom=topmod_onecatch res=1000
r.mask topmod_onecatch --quiet
g.region -a zoom=MASK res=1000

d.rast topmod_onecatch

# Currently using 2010-2017 1km daily, but CEH expects 2010-2020 soon.
# Need to get average rainfall for target subcatchment ihu_watershed
#   CEH-EIDC 2010-2017 1km daily
#   CEH-EIDC 2010-2020 1km daily. Temporarily withdrawn due to errors in
#                                 PET calculations but submitted a request
#                                 to get access on 28/07/2022
# In code below the awk statement converts rain and PET to m/day for Topmodel
#
# Rainfall
t.rast.algebra basename=tmp_ihu_rainfall expression="tmp_ihu_rainfall=if(start_date(wader_rainfall_daily@PERMANENT) <= $end_date_trast, wader_rainfall_daily@PERMANENT)" nprocs=8 --overwrite
t.rast.univar -u tmp_ihu_rainfall | cut -d'|' -f4 > ihu_rainfall.txt 
t.remove -d -f tmp_ihu_rainfall
# Convert rainfall to m / day
awk '{printf("%.6f\n", ($1/1000))}' ihu_rainfall.txt > ihu_rainfall.txt2
mv ihu_rainfall.txt2 input_rain.txt
# PET
t.rast.algebra basename=tmp_ihu_pet expression="tmp_ihu_pet=if(start_date(wader_pet_daily@PERMANENT) <= $end_date_trast, wader_pet_daily@PERMANENT)" nprocs=8 --overwrite
t.rast.univar -u tmp_ihu_pet | cut -d'|' -f4 > ihu_pet.txt 
t.remove -d -f tmp_ihu_pet
awk '{printf("%.6f\n", ($1/1000))}' ihu_pet.txt > ihu_pet.txt2
mv ihu_pet.txt2 input_pet.txt


# Copy over information for future use
# Assemble rainfall and PET into a single file
# original online tutorial creates a file called input_evap.txt for
# rainfall AND evapotranspiration. Renamed here to input_rain_evap.txt
script_name=`basename $0`
rain_evap_file="input_rain_evap.txt"
echo "# Generated by from $script_name start_date=$start_date end_date=$end_date" > $rain_evap_file
echo "# dt [h]: Time step" >> $rain_evap_file
echo "24" >> $rain_evap_file
echo "" >> $rain_evap_file
echo "################################################################################" >> $rain_evap_file
echo "# R [m/dt]:  Rainfall" >> $rain_evap_file
echo "# Ep [m/dt]: Potential evapotranspiration" >> $rain_evap_file
echo "" >> $rain_evap_file
echo "# R Ep" >> $rain_evap_file
paste -d " " input_rain.txt input_pet.txt >> $rain_evap_file

# As t.rast.algebra take while to run, rain/pet data to a
# subcatch_dat folder for ease of access in future
cp $rain_evap_file subcatch_dat/$rain_evap_file.$subcatch_no

r.mask -r

subcatch_no=`expr $subcatch_no + 1`
done


